package seproject;
/**
 *
 * @author MAHE
 */
import newproject.regression.*;
import java.awt.BorderLayout;
import java.awt.Color;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import org.apache.commons.math3.stat.regression.*;
import org.apache.commons.math3.stat.*;
import org.apache.commons.math3.stat.correlation.PearsonsCorrelation;
import org.math.plot.Plot2DPanel;
import org.math.plot.plotObjects.BaseLabel;

public class graphkavya extends javax.swing.JFrame {

    /**
     * Creates new form graphkavya
     */
    double height[]= new double[644];
    double weight[]= new double[644];
    SimpleRegression sr=new SimpleRegression();
    Plot2DPanel plot=new Plot2DPanel();
    PearsonsCorrelation p=new PearsonsCorrelation();
    JTextArea resultados=new JTextArea();
    public void Linearregression() 
    {
        for(int i=0;i<height.length;i++)
        {
            sr.addData(height[i], weight[i]);
            
        }
            double[] yc=new double[weight.length];
            for(int i=0;i<height.length;i++)
        {
            yc[i]=sr.predict(height[i]);
            
        }
            plot.addLegend("weight");
            plot.addScatterPlot("data",height,weight);
            plot.addLinePlot("Regression", height, yc);
            Object o=jComboBox1.getSelectedItem();
            
          
          
           
           
           
            
            BaseLabel title=new BaseLabel("SCATTER PLOT AND LINE PLOT",Color.BLUE,0.5,1.1);
            plot.addPlotable(title);
         
            
            
            JFrame frame=new JFrame("simple linear regression");
         
            frame.setSize(600,500);
            frame.add(plot,BorderLayout.CENTER);
            frame.setLocationRelativeTo(null);
            frame.setVisible(true);
    }

    public graphkavya() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("PARAMTER 1");

        jLabel2.setText("PARAMETER 2");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Net irrigated area(Hectares)", "Density Population(persons per sq.km.)", "Percentage SC Population", "Percentage ST Population", "Percentage Urban Population", "Education level", "Overall Literacy", "Female Literacy", "Sex ratio", "Total Number of Schools", "infant", "Life expectancy at    Birth ", "Number of Villages", "Persons", "Males", "Femal" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Net irrigated area(Hectares)", "Density Population(persons per sq.km.)", "Percentage SC Population", "Percentage ST Population", "Percentage Urban Population", "Education level", "Overall Literacy", "Female Literacy", "Sex ratio", "Total Number of Schools", "infant", "Life expectancy at    Birth ", "Number of Villages", "Persons", "Males", "Femal" }));

        jButton2.setText("VIEW SCATTER PLOT AND LINE PLOT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("CALCULATE PEARSONS CORRELATION COEFFICIENT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21))))
            .addGroup(layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(38, 38, 38))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Object s= jComboBox1.getSelectedItem();
         Object k= jComboBox3.getSelectedItem();
         String j= s.toString();
         String b= k.toString();
         newproject2 x=new newproject2(644,1,644,1);
         
         
         x.setInputFile("C:\\Users\\MAHE\\Desktop\\SEPROJECT\\src\\seproject\\data.xls");
        try {
            x.read();
        } catch (IOException ex) {
            Logger.getLogger(graphkavya.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            Logger.getLogger(graphkavya.class.getName()).log(Level.SEVERE, null, ex);
        }
         x.addd(j);
         x.addd(b);
         
         switch(j)
        {
            case "Net irrigated area(Hectares)":
               height=x.netarea;
            
       
                break; 
                
                
                case "Density Population(persons per sq.km.)":
                   height=x.Density_Population;  
                
                break;
                
                
                case "Percentage SC Population":
                     height=x.sc;
               
                break;
                
                
                case "Percentage ST Population":
                 height=x.st;
                break;
                
                
                case "Percentage Urban Population":
                 height=x.urban;
                break;
                
                
                
                case "Education level":
                 height=x.education_level;
                break;
                
                
                case "Overall Literacy":
                     height=x.overall_literacy;
                
                break;
                
                
                case "Female Literacy":
                     height=x.female_literacy;
                
                break;
                
                
                
                 case "Sex ratio":
                      height=x.sex_ratio;
                
                break;
                
                
                
                 case "Total Number of Schools":
                      height=x.total_no_of_schools;
                
                break;
                
                
                
                
                 case "infant":
                 height=x.imr;
                break;
                
                
                
                 case "Life expectancy at    Birth ":
              height=x.life_expectancy;
                break;
                
                
                
                 case "Number of Villages":
                 height=x.villages;
                break;
                
                
                 case "Persons":
                
                height=x.persons;
                break;
                
                
                 case "Males":
                 height=x.males;
                break;
                
                 case "Females":
                      height=x.females;
                
                break;
                
                
                
                
        }
          switch(b)
        {
            case "Net irrigated area(Hectares)":
                 weight=x.netarea;
                break; 
                
               
                case "Density Population(persons per sq.km.)":
                 weight=x.Density_Population;
                break;
                
                
                case "Percentage SC Population":
                weight=x.sc;
                break;
                
                
                case "Percentage ST Population":
                 weight=x.st;
                 
                break;
                
                
                case "Percentage Urban Population":
                 weight=x.urban;
                break;
                
                
                
                case "Education level":
                 weight=x.education_level;
                break;
                
                
                case "Overall Literacy":
                 weight=x.overall_literacy;
                break;
                
                
                case "Female Literacy":
                 weight=x.female_literacy;
                break;
                
                
                
                 case "Sex ratio":
                 weight=x.sex_ratio;
                break;
                
                
                
                 case "Total Number of Schools":
                 weight=x.total_no_of_schools;
                break;
                
                
                
                
                 case "infant":
                 weight=x.imr;
                break;
                
                
                
                 case "Life expectancy at    Birth ":
              weight=x.life_expectancy;
                break;
                
                
                
                 case "Number of Villages":
                 weight=x.villages;
                break;
                
                
                 case "Persons":
                
                weight=x.persons;
                break;
                
                
                 case "Males":
                 weight=x.males;
                break;
                
                 case "Females":
                 weight=x.females;
                break;
                
                
                
                
        }
         
         Linearregression() ;
              
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Object s= jComboBox1.getSelectedItem();
         Object k= jComboBox3.getSelectedItem();
         String j= s.toString();
         String b= k.toString();
         newproject2 x=new newproject2(644,1,644,1);
         
         
         x.setInputFile("C:\\Users\\MAHE\\Desktop\\SEPROJECT\\src\\seproject\\data.xls");
        try {
            x.read();
        } catch (IOException ex) {
            Logger.getLogger(graphkavya.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            Logger.getLogger(graphkavya.class.getName()).log(Level.SEVERE, null, ex);
        }
         x.addd(j);
         x.addd(b);
         
         switch(j)
        {
            case "Net irrigated area(Hectares)":
               height=x.netarea;
            
       
                break; 
                
                
                case "Density Population(persons per sq.km.)":
                   height=x.Density_Population;  
                
                break;
                
                
                case "Percentage SC Population":
                     height=x.sc;
               
                break;
                
                
                case "Percentage ST Population":
                 height=x.st;
                break;
                
                
                case "Percentage Urban Population":
                 height=x.urban;
                break;
                
                
                
                case "Education level":
                 height=x.education_level;
                break;
                
                
                case "Overall Literacy":
                     height=x.overall_literacy;
                
                break;
                
                
                case "Female Literacy":
                     height=x.female_literacy;
                
                break;
                
                
                
                 case "Sex ratio":
                      height=x.sex_ratio;
                
                break;
                
                
                
                 case "Total Number of Schools":
                      height=x.total_no_of_schools;
                
                break;
                
                
                
                
                 case "infant":
                 height=x.imr;
                break;
                
                
                
                 case "Life expectancy at    Birth ":
              height=x.life_expectancy;
                break;
                
                
                
                 case "Number of Villages":
                 height=x.villages;
                break;
                
                
                 case "Persons":
                
                height=x.persons;
                break;
                
                
                 case "Males":
                 height=x.males;
                break;
                
                 case "Females":
                      height=x.females;
                
                break;
                
                
                
                
        }
          switch(b)
        {
            case "Net irrigated area(Hectares)":
                 weight=x.netarea;
                break; 
                
               
                case "Density Population(persons per sq.km.)":
                 weight=x.Density_Population;
                break;
                
                
                case "Percentage SC Population":
                weight=x.sc;
                break;
                
                
                case "Percentage ST Population":
                 weight=x.st;
                 
                break;
                
                
                case "Percentage Urban Population":
                 weight=x.urban;
                break;
                
                
                
                case "Education level":
                 weight=x.education_level;
                break;
                
                
                case "Overall Literacy":
                 weight=x.overall_literacy;
                break;
                
                
                case "Female Literacy":
                 weight=x.female_literacy;
                break;
                
                
                
                 case "Sex ratio":
                 weight=x.sex_ratio;
                break;
                
                
                
                 case "Total Number of Schools":
                 weight=x.total_no_of_schools;
                break;
                
                
                
                
                 case "infant":
                 weight=x.imr;
                break;
                
                
                
                 case "Life expectancy at    Birth ":
              weight=x.life_expectancy;
                break;
                
                
                
                 case "Number of Villages":
                 weight=x.villages;
                break;
                
                
                 case "Persons":
                
                weight=x.persons;
                break;
                
                
                 case "Males":
                 weight=x.males;
                break;
                
                 case "Females":
                 weight=x.females;
                break;
          }     
          JFrame parent = new JFrame();
          parent.setLocationRelativeTo(null);
         double ll=p.correlation(height, weight);
         if(Math.abs(ll)>0.2)
         {
             JOptionPane.showMessageDialog(parent, "Pearsons Correlation Coefficient is "+ ll);
         }
         else
         {
             JOptionPane.showMessageDialog(parent,"Pearsons Correlation Coefficient is "+ ll+ "\n"+"Insignificant Relationship between Parameters");
         }
        ;
          
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(graphkavya.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(graphkavya.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(graphkavya.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(graphkavya.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new graphkavya().setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
